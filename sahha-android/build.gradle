plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'maven-publish'
}

def secretsPropertiesFile = rootProject.file("sahha-android/secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

def gVersionName = "0.14.6"

android {
    compileSdk 34

    defaultConfig {
        minSdk 26
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunnerArguments clearPackageData: 'true'

        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "SAHHA_SDK_VERSION", "\"${versionName}\"")
        buildConfigField("String", "API_DEV", secretsProperties['API_DEV'])
        buildConfigField("String", "API_PROD", secretsProperties['API_PROD'])
        buildConfigField("String", "ERROR_API_DEV", secretsProperties['ERROR_API_DEV'])
        buildConfigField("String", "ERROR_API_PROD", secretsProperties['ERROR_API_PROD'])
        buildConfigField("String", "SDK_VERSION_NAME", "\"$gVersionName\"")
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        // Used for Unit testing Android dependent elements in /test folder
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        pickFirst 'mockito-extensions/org.mockito.plugins.MockMaker'
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'sdk.sahha.android'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'androidx.work:work-testing:2.7.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation "androidx.test:monitor:1.6.1"

    // Room
    api("androidx.room:room-runtime:2.4.2")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    annotationProcessor("androidx.room:room-compiler:2.4.2")
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    kapt "androidx.room:room-compiler:2.4.2"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.4.2")
    // optional - Test helpers
    testImplementation("androidx.room:room-testing:2.4.2")
    androidTestImplementation 'androidx.room:room-testing:2.3.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Security
    implementation "androidx.security:security-crypto:1.0.0"

    // Dagger
    implementation 'com.google.dagger:dagger:2.45'
    kapt 'com.google.dagger:dagger-compiler:2.45'

    // Retrofit for API calls
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'

    // Mocking
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'org.mockito:mockito-android:3.12.4'
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'

    // Local unit tests
    testImplementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"
    testImplementation "io.mockk:mockk:1.10.5"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.2.0-beta02"
    testImplementation 'org.json:json:20180813'

    // Instrumentation tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker:2.28.1"
    androidTestImplementation "io.mockk:mockk-android:1.10.5"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:core:1.4.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'com.github.sahha-ai'
                artifactId = 'sahha-android'
                version = gVersionName
            }
        }
    }
}